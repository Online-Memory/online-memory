{"ast":null,"code":"var _jsxFileName = \"/Users/azornada/sonny/online-memory/packages/client/src/Game/Game.tsx\";\nimport React, { memo, useCallback } from 'react';\nimport { Container, Grid } from '@material-ui/core';\nimport { useTiles } from './useTiles';\nimport { useStyles } from './styles';\nexport const Game = memo(() => {\n  const gridSize = [10, 10];\n  const classes = useStyles();\n  const {\n    gameTiles,\n    gridX,\n    gridY,\n    getTile,\n    checkoutTile\n  } = useTiles(gridSize[0], gridSize[1]);\n  const handleTileSelected = useCallback(tile => () => {\n    checkoutTile(tile);\n  }, [checkoutTile]);\n\n  if (!gameTiles || !gameTiles.length) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Game\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 12\n      }\n    }, \"Loading...\");\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `Game ${classes.container}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    maxWidth: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    className: classes.container,\n    direction: \"column\",\n    justify: \"center\",\n    spacing: 1,\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, gridY.map((_, indexY) => /*#__PURE__*/React.createElement(Grid, {\n    key: `col-${indexY}`,\n    spacing: 1,\n    justify: \"center\",\n    container: true,\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, gridX.map((_, indexX) => {\n    const tile = getTile(gameTiles, indexX, indexY, gridSize[1]);\n    return /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      key: `col-${indexY}-row-${indexX}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.tileBox,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }\n    }, !tile.owner && /*#__PURE__*/React.createElement(\"img\", {\n      className: classes.tile,\n      src: `tiles/${tile.status === 'show' ? tile.ref : '000'}.png`,\n      alt: \"Memory Tile\",\n      onClick: handleTileSelected(tile),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 25\n      }\n    })));\n  }))))));\n});","map":{"version":3,"sources":["/Users/azornada/sonny/online-memory/packages/client/src/Game/Game.tsx"],"names":["React","memo","useCallback","Container","Grid","useTiles","useStyles","Game","gridSize","classes","gameTiles","gridX","gridY","getTile","checkoutTile","handleTileSelected","tile","length","container","map","_","indexY","indexX","tileBox","owner","status","ref"],"mappings":"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","sourcesContent":["import React, { memo, useCallback } from 'react';\nimport { Container, Grid } from '@material-ui/core';\nimport { useTiles } from './useTiles';\nimport { useStyles } from './styles';\n\nexport const Game = memo(() => {\n  const gridSize = [10, 10];\n  const classes = useStyles();\n  const { gameTiles, gridX, gridY, getTile, checkoutTile } = useTiles(gridSize[0], gridSize[1]);\n  const handleTileSelected = useCallback(\n    tile => () => {\n      checkoutTile(tile);\n    },\n    [checkoutTile]\n  );\n\n  if (!gameTiles || !gameTiles.length) {\n    return <div className=\"Game\">Loading...</div>;\n  }\n\n  return (\n    <div className={`Game ${classes.container}`}>\n      <Container maxWidth=\"lg\">\n        <Grid className={classes.container} direction=\"column\" justify=\"center\" spacing={1} container>\n          {gridY.map((_, indexY) => (\n            <Grid key={`col-${indexY}`} spacing={1} justify=\"center\" container item>\n              {gridX.map((_, indexX) => {\n                const tile = getTile(gameTiles, indexX, indexY, gridSize[1]);\n                return (\n                  <Grid item key={`col-${indexY}-row-${indexX}`}>\n                    <div className={classes.tileBox}>\n                      {!tile.owner && (\n                        <img\n                          className={classes.tile}\n                          src={`tiles/${tile.status === 'show' ? tile.ref : '000'}.png`}\n                          alt=\"Memory Tile\"\n                          onClick={handleTileSelected(tile)}\n                        />\n                      )}\n                    </div>\n                  </Grid>\n                );\n              })}\n            </Grid>\n          ))}\n        </Grid>\n      </Container>\n    </div>\n  );\n});\n"]},"metadata":{},"sourceType":"module"}