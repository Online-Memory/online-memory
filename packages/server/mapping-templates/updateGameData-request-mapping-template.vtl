#set( $identityValue = $util.defaultIfNull($ctx.identity.claims.get("username"), $util.defaultIfNull($ctx.identity.claims.get("cognito:username"), "___xamznone____")) )

#if($util.isNullOrEmpty($identityValue))
    $util.unauthorized()
#end

#set( $gameId = $context.prev.result.id )
#set( $values = $context.prev.result.values )
#set ( $shouldUpdate = $util.defaultIfNullOrEmpty($context.prev.result.update, "TRUE") )

#if( $util.isNullOrEmpty( $gameId ) )
    $utils.error("Error: Cannot update game information with missing game id", "ERROR")
#end

#if( $util.isNullOrEmpty( $values ) )
    $utils.error("Error: Cannot update a game with missing game information", "ERROR")
#end

#set( $expNames  = {} )
#set( $expSet  = {} )
#set( $expValues  = {} )
#set( $expression = "SET" )

#if ( $shouldUpdate )
    $util.qr( $values.put("updatedAt", $util.time.nowISO8601()) )
#end

#if ( $values.isEmpty() )
    {
        "version" : "2017-02-28",
        "operation" : "GetItem",
        "key": {
            "id": $util.dynamodb.toDynamoDBJson($gameId),
            "__typename": $util.dynamodb.toDynamoDBJson("Game")
        }
    }
#else
  #foreach( $entry in $values.entrySet() )
      $!{expSet.put("#${entry.key}", ":${entry.key}")}
      $!{expNames.put("#${entry.key}", "$entry.key")}
      $!{expValues.put(":${entry.key}", $util.dynamodb.toDynamoDB(${entry.value}))}
  #end

  #foreach( $entry in $expSet.entrySet() )
      #set( $expression = "${expression} ${entry.key} = ${entry.value}" )
      #if ( $foreach.hasNext )
        #set( $expression = "${expression}," )
      #end
  #end

  {
      "version" : "2017-02-28",
      "operation" : "UpdateItem",
      "key" : {
          "id": $util.dynamodb.toDynamoDBJson($gameId),
          "__typename": $util.dynamodb.toDynamoDBJson("Game")
      },
      "update" : {
          "expression" : "${expression}",
          "expressionNames" : $utils.toJson($expNames),
          "expressionValues" : $utils.toJson($expValues)
      }
  }
#end
